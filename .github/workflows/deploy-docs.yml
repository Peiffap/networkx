name: deploy

on:
  push:
    branches: [main]

jobs:
  documentation:
    # Do not attempt to deploy documentation on forks
    if: github.repository_owner == 'networkx'

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true

      - name: Before install
        run: |
          sudo apt-get update
          sudo apt-get install graphviz graphviz-dev
          sudo apt-get install libspatialindex-dev

      - name: Sync dependencies
        run: |
          uv sync --extra default --extra test --extra extra --extra doc --extra example
          uv pip list

      - name: Install trusted backends
        run: |
          # Install trusted backends, but not their dependencies.
          # We only need to use the "networkx.backend_info" entry-point.
          # This is the nightly wheel for nx-cugraph.
          uv pip install nx-cugraph-cu11 --extra-index-url https://pypi.anaconda.org/rapidsai-wheels-nightly/simple --no-deps --prerelease=allow
          # Development version of GraphBLAS backend
          uv pip install git+https://github.com/python-graphblas/graphblas-algorithms.git@main --no-deps
          # Development version of nx-parallel backend
          uv pip install git+https://github.com/networkx/nx-parallel.git@main --no-deps

      # To set up a cross-repository deploy key:
      # 1. Create a key pair:
      #   `ssh-keygen -t ed25519 -C "nx_doc_deploy_bot@nomail"`
      # 2. Add the public key to the networkx/documentation repo
      #   - Settings -> Deploy keys -> Add new
      #   - Make sure the key has write permissions
      # 3. Add private key as a secret to networkx/networkx repo
      #   - Settings -> Secrets -> New Repository Secret
      #   - Make sure the name is the same as below: CI_DEPLOY_KEY
      - name: Install SSH agent
        if: github.ref == 'refs/heads/main'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.CI_DEPLOY_KEY }}

      - name: Build docs
        if: github.ref == 'refs/heads/main'
        run: |
          export DISPLAY=:99
          make -C doc/ html

      - name: Deploy docs
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          git-config-name: nx-doc-deploy-bot
          git-config-email: nx-doc-deploy-bot@nomail
          folder: doc/build/html
          repository-name: networkx/documentation
          branch: gh-pages
          target-folder: latest
          ssh-key: true
